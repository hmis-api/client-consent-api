#%RAML 0.8
title: Client Consent API
version: 0.1.0
baseUri: https://www.hmislynk.com/

schemas:
 - consent_schema: !include schemas/consent_schema.json
 - consent_id_schema: !include schemas/consent_id_schema.json
 - consents_schema: !include schemas/consents_schema.json
 - status_schema: !include schemas/status_schema.json
 - status_id_schema: !include schemas/status_id_schema.json
 - statuses_schema: !include schemas/statuses_schema.json

resourceTypes:
  - collection:
      description: "Operations performed on the set of all <<resourcePathName>> within the system, and for adding a new <<resourcePathName|!singularize>> to the set of <<resourcePathName>> "
      get:
        #securedBy: [oauth_2_0: { scopes: [ user ] } ]
        description: Searches for <<resourcePathName|!singularize>>.  Returns a list of <<resourcePathName|!singularize>> ids, based on the query parameters sent.  The query parameters are cumulative, so each additional query parameter nrrows the search down further.
        queryParameters:
          CreatedAfter:
            description: searches for members of the collection created after (inclusive) a particular date
            type: "date"
            example: 10-11-2011
          CreatedBefore:
            description: searches for members of the collection created before (inclusive) a particular date
            type: "date"
            example: 10-11-2012
          UpdatedAfter:
            description: searches for members of the collection updated after (inclusive) a particular date
            type: "date"
            example: 10-11-2011
          UpdatedBefore:
            description: searches for members of the collection updated before (inclusive) a particular date
            type: "date"
            example: 10-11-2012
        responses:
          200:
            description: OK – Everything is working.
            body:
              application/json:
                schema: <<names_schema>>
                example: <<names_example>>
          400:
            description: Bad Request – The request was invalid or cannot be served.
          403:
            description: Forbidden – The server understood the request, but is refusing it or the access is not allowed.
          404:
            description: Not found – There is no resource behind the URI.
          500:
            description: 500 – Internal Server Error
      post:
        description: |
          Add a <<resourcePathName|!singularize>>
        body:
          application/json:
            schema: <<name_schema>>
            example: <<name_example>>
        responses:
          201:
            description: OK - New resource has been created.
            body:
              application/json:
                schema: <<name_id_schema>>
                example: <<name_id_example>>
          400:
            description: Bad Request – The request was invalid or cannot be served.
          401:
            description: Unauthorized – The request requires user authentication.
          403:
            description: Forbidden – The server understood the request, but is refusing it or access is not allowed.
          404:
            description: Not found – There is no resource behind the URI.
          422:
            description: Unprocessable Entity - Request body is incorrect.
          500:
            description: 500 – Internal Server Error.
  -  member:
      get:
        description: Gets a <<resourcePathName|!singularize>> using a URI resource parameter/ID.
        responses:
          200:
            description: OK – Everything is working.
            body:
              application/json:
                schema: <<name_id_schema>>
                example: <<name_id_example>>
          400:
            description: Bad Request – The request was invalid or cannot be served.
          401:
            description: Unauthorized – The request requires an user authentication.
          403:
            description: Forbidden – The server understood the request, but is refusing it or the access is not allowed.
          404:
            description: Not found – There is no resource behind the URI.
          500:
            description: Internal Server Error
      put:
        description: Updates a specific <<resourcePathName|!singularize>> specified by the URI resource parameter/ID.
        body:
          application/json:
            schema: <<name_schema>>
            example: <<name_example>>
        responses:
          200:
            description: OK – Everything is working.
          304:
            description: Not Modified – The client can use cached data.
          400:
            description: Bad Request – The request was invalid or cannot be served.
          401:
            description: Unauthorized – The request requires a user.
          403:
            description: Forbidden – The server understood the request, but is refusing it or the access is not allowed.
          404:
            description: Not found – There is no resource behind the URI.
          500:
            description: Internal Server Error.
      delete:
        description: Deletes a specific <<resourcePathName|!singularize>> specified by the URI resource parameter/ID.
        responses:
          204:
            description: OK – The resource was successfully deleted.
          400:
            description: Bad Request – The request was invalid or cannot be served.
          401:
            description: Unauthorized – The request requires user authentication.
          403:
            description: Forbidden – The server understood the request, but is refusing it or the access is not allowed.
          404:
            description: Not found – There is no resource behind the URI.
          500:
            description: Internal Server Error.
mediaType: application/json
protocols:
  -  HTTPS

/consents:
  type:
      collection:
        name_schema: consent_schema
        name_id_schema: consent_id_schema
        names_schema: consents_schema
        name_example: !include /examples/consent_example.json
        name_id_example: !include /examples/consent_id_example.json
        names_example: !include /examples/consents_example.json
  /{consentId}:
    type:
      member:
        name_schema:  consent_schema
        name_id_schema: consent_id_schema
        name_id_example: !include /examples/consent_id_example.json
        name_example: !include /examples/consent_example.json
    /statuses:
      type:
        collection:
          name_schema: status_schema
          name_id_schema: status_id_schema
          names_schema: statuses_schema
          name_example: !include /examples/status_example.json
          name_id_example: !include /examples/status_id_example.json
          names_example: !include /examples/statuses_example.json
      /{statusId}:
        type:
          member:
            name_schema:  status_schema
            name_id_schema: status_id_schema
            name_id_example: !include /examples/status_id_example.json
            name_example: !include /examples/status_example.json